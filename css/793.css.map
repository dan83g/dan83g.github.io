{"version":3,"file":"css/793.css","mappings":"AAEA,2BACE,eACA,MACA,OACA,WACA,YACA,gCACA,aACA,uBACA,mBACA,aAEA,oCACE,sBACA,aACA,kBACA,kBACA,YCQO,+CACP,sBAEO,8CACP,yBAJO,+CACP,cAEO,8CACP,cAJO,+CACP,qBAEO,8CACP,qBDPF,yCACE,kBACA,QACA,UACA,gBACA,YACA,eACA,eCJO,oDACP,sBAEO,mDACP,yBAJO,oDACP,cAEO,mDACP,cAJO,oDACP,qBAEO,mDACP,qB;AC7BJ,4BACE,eACA,gBACA,kBACA,eAEA,gBACA,SACA,UACA,oCAEA,uDACE,UACA,4BDYO,kEACP,yBAEO,iEACP,yB;AE7BJ,4BACE,wBFwBS,uCACP,4BAEO,sCACP,4BEzBJ,6BACE,gB","sources":["webpack:///./shared/ui/modal/styles.module.sass","webpack:///./app/theming/mixins.scss","webpack:///./shared/ui/tab/styles.module.sass","webpack:///./shared/ui/tab-view/styles.module.sass"],"sourcesContent":["@import src/app/styles/common\n\n.modal\n  position: fixed\n  top: 0\n  left: 0\n  width: 100%\n  height: 100%\n  background-color: rgba(0, 0, 0, 0.2)\n  display: flex\n  justify-content: center\n  align-items: center\n  z-index: 1000\n\n  &__content\n    background-color: white\n    padding: 20px\n    border-radius: 4px\n    position: relative\n    width: 400px\n    +theme(background-color, mainBg)\n    +theme(color, text)\n    +theme(border-color, borderColor2)\n\n  &__close-button\n    position: absolute\n    top: 0px\n    right: 0px\n    background: none\n    border: none\n    font-size: 24px\n    cursor: pointer\n    +theme(background-color, mainBg)\n    +theme(color, text)\n    +theme(border-color, borderColor2)\n","@import \"theme\";\n\n/**\nПример использования:\n  body\n    @include theme(color, text)\n\n  создаст\n  html.light body {\n    color: text для светлой темы\n  }\n\n  html.dark body {\n    color: text для темной темы\n  }\n*/\n\n/**\nКак это работает\n@at-root обозначает это написанные свойства не должны быть вложены. То есть не body html.light body, а html.light body\nhtml:global(.light) #{&} обозначает, что нужно в html с классом light в выбранном элементе (& будет заменен на соответствущий селектор) указать следующие свойства\nпоследующая строка создает свойства, например color: #ccc\nmap-get - встроенная функция sass, которая достает из карты (map) значение переменной $var\nв некоторых свойствах недостаточно указать просто значение, а нужно указать дополнительные данные,\nнапример theme(border, var, 1px solid) создаст border: 1px solid varValue(тот цвет, который находится в по ключу var)\n*/\n@mixin theme($property, $var, $before:null, $after:null) {\n  @at-root html:global(.light) #{&} {\n    #{$property}: #{$before} #{map-get($light, $var)} #{$after};\n  }\n  @at-root html:global(.dark) #{&} {\n    #{$property}: #{$before} #{map-get($dark, $var)} #{$after};\n  }\n}\n","@import src/app/styles/common\n\n.button\n  font-size: 1rem\n  font-weight: 700\n  padding: 10px 30px\n  cursor: pointer\n  // opacity: 0.6\n  background: white\n  border: 0\n  outline: 0\n  transition: ease border-bottom 250ms\n\n  &.active\n    opacity: 1\n    border-radius: 10px 10px 0 0\n    +theme(background-color, primaryColor)","@import src/app/styles/common\n\n.header\n  border-bottom: 2px solid\n  +theme(border-bottom-color, primaryColor)\n\n.content\n  margin-top: 1rem"],"names":[],"sourceRoot":""}