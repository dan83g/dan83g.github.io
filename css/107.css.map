{"version":3,"file":"css/107.css","mappings":"AAEA,0BACE,aACA,eACA,uBACA,mBACA,YACA,eACA,gBCkBS,qCACP,sBAEO,oCACP,yBAJO,qCACP,cAEO,oCACP,cAJO,qCACP,qBAEO,oCACP,qBDjBJ,0BACE,eACA,kBCWS,qCACP,UAEO,oCACP,U","sources":["webpack:///./pages/not-found/ui/styles.module.sass","webpack:///./app/theming/mixins.scss"],"sourcesContent":["@import src/app/styles/common\n\n.root\n  display: flex\n  flex-wrap: wrap\n  justify-content: center\n  align-items: center\n  height: 90vh\n  font-size: 2rem\n  font-weight: 800\n  +theme(background-color, mainBg)\n  +theme(color, primaryColor)\n  +theme(border-color, borderColor)\n\n.icon\n  font-size: 4rem\n  margin-right: 1rem\n  +theme(color, mainRed)\n","@import \"theme\";\n\n/**\nПример использования:\n  body\n    @include theme(color, text)\n\n  создаст\n  html.light body {\n    color: text для светлой темы\n  }\n\n  html.dark body {\n    color: text для темной темы\n  }\n*/\n\n/**\nКак это работает\n@at-root обозначает это написанные свойства не должны быть вложены. То есть не body html.light body, а html.light body\nhtml:global(.light) #{&} обозначает, что нужно в html с классом light в выбранном элементе (& будет заменен на соответствущий селектор) указать следующие свойства\nпоследующая строка создает свойства, например color: #ccc\nmap-get - встроенная функция sass, которая достает из карты (map) значение переменной $var\nв некоторых свойствах недостаточно указать просто значение, а нужно указать дополнительные данные,\nнапример theme(border, var, 1px solid) создаст border: 1px solid varValue(тот цвет, который находится в по ключу var)\n*/\n@mixin theme($property, $var, $before:null, $after:null) {\n  @at-root html:global(.light) #{&} {\n    #{$property}: #{$before} #{map-get($light, $var)} #{$after};\n  }\n  @at-root html:global(.dark) #{&} {\n    #{$property}: #{$before} #{map-get($dark, $var)} #{$after};\n  }\n}\n"],"names":[],"sourceRoot":""}